pipeline {
  agent {
    docker {
      image 'maven:3.9.6-eclipse-temurin-17' // Uses Maven with Java 17
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Root + Docker access
    }
  }

  stages {
    // üõ†Ô∏è Install required tools
    stage('Install Git and Docker') {
      steps {
        sh 'apt-get update && apt-get install -y git docker.io'
        // Fix: We installed git because it was missing inside container.
      }
    }

    // ‚úÖ Basic sanity test
    stage('Checkout') {
      steps {
        sh 'echo code checkout passed'
      }
    }

    // üî® Compile & test Java code
    stage('Build and Test') {
      steps {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    // üîç Run SonarQube scan
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.176.60.36:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    // üê≥ Build Docker image and push to Docker Hub
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "eashudivate/test:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    // ‚úèÔ∏è Update deployment YAML file with new image version
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "CI-CD-ETE-Implementation"
        GIT_USER_NAME = "renupriyadivate"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            // üõ†Ô∏è Git configuration
            git config --global user.email "eashudivate@gmail.com"
            git config --global user.name "renupriyadivate"
            git config --global --add safe.directory /var/lib/jenkins/workspace/ci-cd
            // ‚ùó Fix: Prevent "dubious ownership" error

            cd java-maven-sonar-argocd-helm-k8s
            git pull https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git

            // üñäÔ∏è Replace image tag in YAML
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml

            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
